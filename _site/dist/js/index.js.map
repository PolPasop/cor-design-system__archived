{"version":3,"file":"index.js","sources":["../../src/components/tabs/tabs.js"],"sourcesContent":["import \"https://argyleink.github.io/scroll-timeline/dist/scroll-timeline.js\";\r\n\r\nconst { matches: motionOK } = window.matchMedia(\r\n  \"(prefers-reduced-motion: no-preference)\"\r\n);\r\n\r\n// grab and stash elements\r\nconst tabgroup = document.querySelector(\"cor-snap-tabs\");\r\nconst tabsection = tabgroup.querySelector(\":scope > section\");\r\nconst tabnav = tabgroup.querySelector(\":scope nav\");\r\nconst tabnavitems = tabnav.querySelectorAll(\":scope a\");\r\nconst tabindicator = tabgroup.querySelector(\":scope .snap-indicator\");\r\n\r\n/* \r\n  shared timeline for .indicator \r\n  and nav > a colors */\r\nconst sectionScrollTimeline = new ScrollTimeline({\r\n  scrollSource: tabsection,\r\n  orientation: \"inline\",\r\n  fill: \"both\",\r\n});\r\n\r\n/*\r\n  for each nav link\r\n  - animate color based on the scroll timeline\r\n  - color is active when its the current index*/\r\ntabnavitems.forEach((navitem) => {\r\n  navitem.animate(\r\n    {\r\n      color: [...tabnavitems].map((item) =>\r\n        item === navitem ? `var(--text-active-color)` : `var(--text-color)`\r\n      ),\r\n    },\r\n    {\r\n      duration: 1000,\r\n      fill: \"both\",\r\n      timeline: sectionScrollTimeline,\r\n    }\r\n  );\r\n});\r\n\r\nif (motionOK) {\r\n  tabindicator.animate(\r\n    {\r\n      transform: [...tabnavitems].map(\r\n        ({ offsetLeft }) => `translateX(${offsetLeft}px)`\r\n      ),\r\n      width: [...tabnavitems].map(({ offsetWidth }) => `${offsetWidth}px`),\r\n    },\r\n    {\r\n      duration: 1000,\r\n      fill: \"both\",\r\n      timeline: sectionScrollTimeline,\r\n    }\r\n  );\r\n}\r\n\r\nconst setActiveTab = (tabbtn) => {\r\n  tabnav.querySelector(\":scope a[active]\").removeAttribute(\"active\");\r\n\r\n  tabbtn.setAttribute(\"active\", \"\");\r\n  tabbtn.scrollIntoView();\r\n};\r\n\r\nconst determineActiveTabSection = () => {\r\n  const i = tabsection.scrollLeft / tabsection.clientWidth;\r\n  const matchingNavItem = tabnavitems[i];\r\n\r\n  matchingNavItem && setActiveTab(matchingNavItem);\r\n};\r\n\r\ntabnav.addEventListener(\"click\", (e) => {\r\n  if (e.target.nodeName !== \"A\") return;\r\n  setActiveTab(e.target);\r\n});\r\n\r\ntabsection.addEventListener(\"scroll\", () => {\r\n  clearTimeout(tabsection.scrollEndTimer);\r\n  tabsection.scrollEndTimer = setTimeout(determineActiveTabSection, 100);\r\n});\r\n\r\nwindow.onload = () => {\r\n  if (location.hash)\r\n    tabsection.scrollLeft = document.querySelector(location.hash).offsetLeft;\r\n\r\n  determineActiveTabSection();\r\n};\r\n"],"names":["motionOK","window","tabgroup","document","tabsection","tabnav","tabnavitems","tabindicator","sectionScrollTimeline","ScrollTimeline","scrollSource","orientation","fill","tabbtn","determineActiveTabSection","matchingNavItem","setActiveTab","navitem","color","_toConsumableArray","item","duration","timeline","transform","width","e","clearTimeout","setTimeout","window.onload","location"],"mappings":"02MAEiBA,EAAaC,kBAC5B,mDAIIC,EAAWC,uBAAuB,iBAClCC,EAAaF,gBAAuB,oBACpCG,EAASH,gBAAuB,cAChCI,EAAcD,mBAAwB,YACtCE,EAAeL,gBAAuB,0BAKtCM,EAAwB,IAAIC,eAAe,CAC/CC,aAAcN,EACdO,YAAa,SACbC,KAAM,oBAsCcC,GACpBR,gBAAqB,oCAAoC,yBAErC,SAAU,uBAIES,iBAE1BC,EAAkBT,EADdF,aAAwBA,kBAGfY,EAAaD,cA1Cd,SAACE,GACnBA,UACE,CACEC,MAAOC,EAAIb,QAAiB,SAACc,cAClBH,qDAGb,CACEI,SAAU,IACVT,KAAM,OACNU,SAAUd,UAMdD,UACE,CACEgB,UAAWJ,EAAIb,QACb,8DAEFkB,MAAOL,EAAIb,QAAiB,oDAE9B,CACEe,SAAU,IACVT,KAAM,OACNU,SAAUd,IAmBhBH,mBAAwB,SAAS,SAACoB,GACN,MAAtBA,mBACJT,EAAaS,gCAGa,UAAU,WACpCC,aAAatB,mCACeuB,WAAWb,EAA2B,sBAGpDc,WACVC,gBACFzB,aAAwBD,uBAAuB0B"}